====== Tickets ======

Tickets allow you to easily track issues and service requests from your clients.

==== Views ====

There are currently two main views for tickets on the agent side

  * All tickets (from all clients)
{{:tickets-listing.png?900|}}

  * Client-specific tickets - accessed via a client's view/page
{{:client-tickets-list.png?900|}}


==== Fields ====

  * Subject
  * Ticket description
  * Client & Contact
  * Priority (low/med/high)
  * Status (new, open, on-hold, resolved, closed)
  * Related asset (future feature is to allow multiple assets)


==== Features ====

  * Agent Assignment/Re-assignment
{{:tickets-assign_agent.png|}}
  * Custom ticket prefix
{{:ticket-settings-ticket_prefix.png|}}
  * Time tracking
{{:tickets-time_tracking.png|}}
  * Email integration
{{:tickets-public_updates.png|}}
  * Private/internal notes
{{:tickets-private_notes.png|}}
  * Merging

  * Scheduled/Recurring tickets
{{:scheduled-tickets-create.png?500|}}
  * Invoicing
{{:tickets-invoice.png?300|}}

  * Schedule future work (specifying onsite/remote)

  * Support for Project & Task management

  * Watchers / Collaborators to allow others to receive updates

  * Custom ticket states

  * Resolved state - A ticket is resolved before being closed. Agents and client contacts can re-open resolved tickets for 72 hrs (configurable) before they automatically close. 

  * Closed state - Once a ticket is closed, it cannot be re-opened

  * Client contacts with the "Technical contact" role are able to see all tickets under their Client 

  * Reporting on tickets per client, time worked, average time to solve

==== Email Ticketing/Email to Ticket Parsing ====
  * See [[ticket_email_parse|here]]

=== Notifications ===
  * Client notifications can be configured to be sent on ticket creation & closure //("Send clients general notification emails")//
  * New ticket email notifications can be configured to an email/distribution list, so your team is always aware of new tickets //("Email address to notify when new tickets are raised")//
  * Agents will be notified when assigned a ticket & when their assigned ticket is replied to / updated 

==== API ====
/api/v1/tickets

**Read - Retrieve ticket information (/read.php) (GET)**
  * **Default / No params - Returns all tickets**
  * ticket_id - Specific ticket ID from the ITFlow database (may, but usually shouldn't, differ from ticket number)

<code>

Invoke-RestMethod -Uri "https://demo.itflow.org/api/v1/tickets/read.php?api_key=YOUR-API-KEY&ticket_id=3" | ConvertTo-Json
{
    "success":  "True",
    "count":  1,
    "data":  [
                 {
                     "0":  "3",
                     "ticket_id":  "3",
                     "1":  "TCK-",
                     "ticket_prefix":  "TCK-",
                     "2":  "3",
                     "ticket_number":  "3",
                     "3":  null,
                     "ticket_category":  null,
                     "4":  "Computer broken",
                     "ticket_subject":  "Computer broken",

[...]

</code>

